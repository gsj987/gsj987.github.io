<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on gsj987的博客</title>
    <link>https://gsj987.github.io/posts/</link>
    <description>Recent content in Posts on gsj987的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 18 Dec 2021 00:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://gsj987.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>聪明的笔记6 - 构建想法</title>
      <link>https://gsj987.github.io/posts/how-to-take-smart-notes-6/</link>
      <pubDate>Sat, 18 Dec 2021 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/how-to-take-smart-notes-6/</guid>
      <description>本系列是书 《 How to take smart notes 》 的读书笔记，本书是系统的介绍 slipbox 笔记法的方法，原理和实践。本章是第十二章，论述如何利用笔记构建想法，从已有笔记中找到新的灵感，并利用笔记系统对他们进行捕捉。这个过程也有一系列的方法论。</description>
    </item>
    
    <item>
      <title>聪明的笔记5 - 记聪明的笔记</title>
      <link>https://gsj987.github.io/posts/how-to-take-smart-notes-5/</link>
      <pubDate>Sun, 17 Jan 2021 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/how-to-take-smart-notes-5/</guid>
      <description>本系列是书 《 How to take smart notes 》 的读书笔记，本书是系统的介绍 slipbox 笔记法的方法，原理和实践。本章是第十一章，论述如何记正式笔记，也就是从各种阅读资料和临时笔记中，整理的思考笔记，并将内容整理到存储设备 slipbox 的方法。</description>
    </item>
    
    <item>
      <title>聪明的笔记4 - 为了理解而阅读</title>
      <link>https://gsj987.github.io/posts/how-to-take-smart-notes-4/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/how-to-take-smart-notes-4/</guid>
      <description>本系列是书 《 How to take smart notes 》 的读书笔记，本书是系统的介绍 slipbox 笔记法的方法，原理和实践。本章是第十 章，论述在在阅读文章，材料，书籍时，我们应该保持的习惯。总得来说就是，应该拿阅读的过程作为理解的过程，让自己在这个过程中检验是否真的理解了，并同时的去思考当前内容和以前的知识是否有关联，从而提升阅读质量，并为做正式笔记的书写打好基础。这就需要一系列的方法论。</description>
    </item>
    
    <item>
      <title>聪明的笔记3 - ﻿分离和连接任务</title>
      <link>https://gsj987.github.io/posts/how-to-take-smart-notes-3/</link>
      <pubDate>Tue, 17 Nov 2020 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/how-to-take-smart-notes-3/</guid>
      <description>本系列是书 《 How to take smart notes 》 的读书笔记，本书是系统的介绍 slipbox 笔记法的方法，原理和实践。本章是第九章，论述在写作过程中，如何拆分任务并组合他们。</description>
    </item>
    
    <item>
      <title>聪明的笔记2 - 四个重要原则</title>
      <link>https://gsj987.github.io/posts/how-to-take-smart-notes-2/</link>
      <pubDate>Thu, 17 Sep 2020 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/how-to-take-smart-notes-2/</guid>
      <description>本系列是书 《 How to take smart notes 》 的读书笔记，本书是系统的介绍 slipbox 笔记法的方法，原理和实践。本章是第五至八章，论述笔记方法在使用时我们要遵循的方法。</description>
    </item>
    
    <item>
      <title>聪明的笔记1 - 介绍</title>
      <link>https://gsj987.github.io/posts/how-to-take-smart-notes-1/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/how-to-take-smart-notes-1/</guid>
      <description>本系列是书 《 How to take smart notes 》 的读书笔记，本书是系统的介绍 slipbox 笔记法的方法，原理和实践。本章是第一至四章，介绍 slipbox 笔记的来源和基本的工作流程。</description>
    </item>
    
    <item>
      <title>Tensorflow 体验篇-4 卷积网络和图像分类</title>
      <link>https://gsj987.github.io/posts/tensorflow-experience-4/</link>
      <pubDate>Mon, 09 Mar 2020 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/tensorflow-experience-4/</guid>
      <description>从理论上说，全连接神经网络能够表达一切的多项式，只要深度（隐藏层）够深，全连接神经网络能适应所有的模型，但缺点是需要极大的计算量，而且在深度增加，激活函数的传递量会大大减弱。卷积神经网络是为了解决这个问题，他利用类似生物的局部兴奋逐层整合，形成高级的抽象的概念的过程，减少训练参数，但增加深度，增加对抽象概念的准确性。CNN 在图像领域使用较多。</description>
    </item>
    
    <item>
      <title>Tensorflow 体验篇-3 全连接网络</title>
      <link>https://gsj987.github.io/posts/tensorflow-experience-3/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/tensorflow-experience-3/</guid>
      <description>全连接网络(fully connected network)是神经网络中非常重要的概念，他是由多层网络输入输出所组成的节点映射，每一层之间的节点都相互连接，对于一个 $R^m-&amp;gt;R^n$ 的全连接网络，输入(m 个节点） 和输出（n 个节点）之间可能会有多个隐藏层，如图所示：</description>
    </item>
    
    <item>
      <title>利用 libhybris 在树莓派上使用 Android 库</title>
      <link>https://gsj987.github.io/posts/use-android-library-on-raspberry-pi-with-libhybris/</link>
      <pubDate>Sun, 18 Aug 2019 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/use-android-library-on-raspberry-pi-with-libhybris/</guid>
      <description>Android 是基于 Linux 的 OS，所以想要在 ARM 的 Linux 上，比如树莓派，是有可能的。但事实上其中还是有问题，主要是因为 Android 的 so 库是通过 Bionic libc 代替了 glibc 作为标准库，两者有很多的差别，无法直接移用。</description>
    </item>
    
    <item>
      <title>在 OrgMode 中保存并粘贴剪切板中的图片</title>
      <link>https://gsj987.github.io/posts/save-and-paste-image-from-clipboard-in-orgmode/</link>
      <pubDate>Tue, 13 Aug 2019 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/save-and-paste-image-from-clipboard-in-orgmode/</guid>
      <description>最近的一个项目中，我打算使用 OrgMode 作为文档的书写工具，主要原因是比较简单，而且可以使用文学编程，简化 API 文档的写作流程。但首先遇到了个难题：如何方便的插入图片。于是我花了些时间，边学边用 elisp 做了一个函数，解决了我项目中的问题：从剪贴板保存图片到项目目录，并以相对目录的形式插入到 org 文件中。</description>
    </item>
    
    <item>
      <title>Tensorflow 体验篇-2 使用 Tensorflow 做逻辑回归</title>
      <link>https://gsj987.github.io/posts/tensorflow-experience-2/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/tensorflow-experience-2/</guid>
      <description>逻辑回归 逻辑回归是机器学习中最重要的概念之一。所谓逻辑回归就是在几组数据集中，利用广义线性回归的方法，对数据进行分类的方法。虽然他叫回归，但本质上是利用回归方法做了分类。其使用前提是：</description>
    </item>
    
    <item>
      <title>Pisma.io 可以用来做什么？</title>
      <link>https://gsj987.github.io/posts/what-can-prisma-io-do/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/what-can-prisma-io-do/</guid>
      <description>prisma.io 是一个用 Scala写的 ORM-like 的服务层，可以方便的作为多种数据库的连接层，是微服务环境下的 ORM 替代品和快速 graphql 建设脚手夹。</description>
    </item>
    
    <item>
      <title>Tensorflow 体验篇-1 使用 Tensorflow 做线性回归</title>
      <link>https://gsj987.github.io/posts/tensorflow-experience-1/</link>
      <pubDate>Fri, 26 Apr 2019 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/tensorflow-experience-1/</guid>
      <description>线性回归是非常基础的统计学知识，也是所有机器学习研究的源头，因为现在的数学都还没有能很好的解决非线性的问题，所以基本上所有的机器学习的思路都是用非线性核函数，将数据转换到近似线性的空间中，然后再用线性方法如线性回归进行解决。</description>
    </item>
    
    <item>
      <title>Tensorflow 体验篇-0 安装</title>
      <link>https://gsj987.github.io/posts/tensorflow-experience-0/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0800</pubDate>
      
      <guid>https://gsj987.github.io/posts/tensorflow-experience-0/</guid>
      <description>综述 当下机器学习火热，作为4年前也算是学过一些的研究生（半路出家），也很好奇现在的主流工业界对ML已经发展到什么程度了。在看了《精通数据科学：从线性回归到深度学习》1，以及简单的翻阅了几页的《TensorFlow for Deep Learning》2，我觉得现代深度学习的应用还算简单，比我们读书的时候新思路是很多，但是鉴于工业界的发展，实践也容易多了。</description>
    </item>
    
  </channel>
</rss>